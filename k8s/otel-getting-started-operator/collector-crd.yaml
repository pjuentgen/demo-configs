apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  name: otel-collector
  namespace: opentelemetry
spec:
  mode: daemonset
  targetAllocator:
    image: ghcr.io/open-telemetry/opentelemetry-operator/target-allocator:main
    enabled: true
    serviceAccount: otelcol
    prometheusCR:
      enabled: true
      serviceMonitorSelector:
        app: my-app
  volumeMounts:
    - name: varlogpods
      mountPath: /var/log/pods
      readOnly: true
    - name: varlibdockercontainers
      mountPath: /var/lib/docker/containers
      readOnly: true
  volumes:
    - name: varlogpods
      hostPath:
        path: /var/log/pods
    - name: varlibdockercontainers
      hostPath:
        path: /var/lib/docker/containers
  env:
    - name: DASH_AUTHORIZATION_TOKEN
      valueFrom:
        secretKeyRef:
          name: dash0-secrets
          key: dash0-authorization-token
  config:
    exporters:
      otlp/dash0:
        auth:
          authenticator: bearertokenauth/dash0
        endpoint: ingress.eu-west-1.aws.dash0.com:4317
    extensions:
      bearertokenauth/dash0:
        scheme: Bearer
        token: ${env:DASH_AUTHORIZATION_TOKEN}
      health_check: {}
    processors:
      batch: {}
      memory_limiter:
        check_interval: 1s
        limit_percentage: 50
        spike_limit_percentage: 30
    receivers:
      prometheus:
        config:
          scrape_configs:
          - job_name: 'otel-collector'
            scrape_interval: 30s
            static_configs:
            - targets: [ '0.0.0.0:8888' ]
        target_allocator:
          endpoint: http://otelcol-targetallocator
          interval: 30s
          collector_id: "${POD_NAME}"
      k8s_events:
        namespaces: {}
      otlp:
        protocols: 
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
      filelog:
        include:
          - /var/log/pods/*/*/*.log
        start_at: beginning
        include_file_path: true
        operators:
          - id: container-parser
            type: container
            add_metadata_from_filepath: true
          - type: regex_parser
            regex: '"trace_id":"(?P<trace_id>\S*)","span_id":"(?P<span_id>\S*)","trace_flags":"(?P<trace_flags>\d*)"'
            on_error: send_quiet
            trace:
              trace_id:
                parse_from: attributes.trace_id
              span_id:
                parse_from: attributes.span_id
              trace_flags:
                parse_from: attributes.trace_flags
          - type: trace_parser
            trace_id:
              parse_from: attributes.trace_id
            span_id:
              parse_from: attributes.span_id
            trace_flags:
              parse_from: attributes.trace_flags
          - type: move
            from: attributes["k8s.container.name"]
            to: resource["container.name"]
          - type: move
            from: attributes["k8s.pod.name"]
            to: resource["k8s.pod.name"]
          - type: move
            from: attributes["k8s.pod.uid"]
            to: resource["k8s.pod.uid"]
          - type: move
            from: attributes["k8s.namespace.name"]
            to: resource["k8s.namespace.name"]
          - type: remove
            field: attributes["k8s.container.restart_count"]

          # - type: remove
          #   field: attributes["time"]
    service:
      extensions:
        - bearertokenauth/dash0
        - health_check
      pipelines:
        logs:
          exporters:
            - otlp/dash0
          processors:
            - batch                    
          receivers:
            - otlp
            - k8s_events
            - filelog
        metrics:
          exporters:
            - otlp/dash0
          processors:
            - batch
          receivers:
            - otlp
            - prometheus
        traces:
          exporters:
            - otlp/dash0
          processors:
            - batch
          receivers:
            - otlp
        logs/k8s_events:
          receivers: [k8s_events]
          processors: [batch]
          exporters: [otlp/dash0]
      telemetry:
        metrics:
          address: 0.0.0.0:8888

